apiVersion: v1
kind: Service
metadata:
  name: event-consumer-service
  labels:
    app: event-consumer-service
spec:
  selector:
    app: event-consumer-service
  ports:
    - name: http
      port: 8010
      targetPort: 8010
      nodePort: 30010
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-consumer-service
  labels:
    app: event-consumer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: event-consumer-service
  template:
    metadata:
      labels:
        app: event-consumer-service
    spec:
      serviceAccountName: default
      initContainers:
        - name: wait-for-config
          image: curlimages/curl:8.7.1
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "Waiting for config-service...";
              until curl -s http://config-service:8888/actuator/health | grep '"status":"UP"' > /dev/null; do
                echo "Config-service not ready yet. Waiting...";
                sleep 3;
              done
              echo "Config-service is UP.";

      containers:
        - name: event-consumer-service
          image: lhdmir/event-consumer-service:latest
          ports:
            - containerPort: 8010
          env:
            - name: CONFIG_SERVER_URL
              value: "http://config-service:8888"
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8010
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8010
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 5
